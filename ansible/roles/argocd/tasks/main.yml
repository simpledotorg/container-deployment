---

- name: Download helm binary
  ansible.builtin.get_url:
    url: "https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz"
    dest: /tmp/

- name: Extract helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm-{{ helm_version }}-linux-amd64.tar.gz
    dest: /usr/local/bin/
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: Remove tar file
  file:
    state: absent
    path: /tmp/helm-{{ helm_version }}-linux-amd64.tar.gz

- name: install common packages
  apt:
    update_cache: yes
    pkg:
      - python3-pip
    state: latest
  become: true

- name: Install kubernetes python package
  ansible.builtin.pip:
    name: kubernetes

- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: argocd
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Add argocd helm repo
  kubernetes.core.helm_repository:
    name: argo-cd
    repo_url: "https://argoproj.github.io/argo-helm"

- name: Helm install argocd
  kubernetes.core.helm:
    kubeconfig: "{{ kubeconfig }}"
    name: argocd
    chart_ref: argo-cd/argo-cd
    chart_version: "{{ argocd_helm_chart_version }}"
    release_namespace: argocd
    values:
      global:
        image:
          tag: "{{ argocd_version }}"
      notifications:
        secret:
          create: false
