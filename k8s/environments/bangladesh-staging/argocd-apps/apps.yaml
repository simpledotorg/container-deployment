# Argocd
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
spec:
  destination:
    name: ''
    namespace: argocd
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/argo-cd
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - ../../environments/bangladesh-staging/values/argocd.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Cert manager
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
spec:
  destination:
    name: ''
    namespace: cert-manager
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/cert-manager
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Configmaps
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: configmaps
spec:
  destination:
    name: ''
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/environments/bangladesh-staging/configmaps
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Nginx ingress
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
spec:
  destination:
    name: ''
    namespace: ingress-nginx
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/ingress
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.aws-nlb.yaml
        - values.affinity.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---
# Reloader
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: reloader
spec:
  destination:
    name: ''
    namespace: default
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/reloader
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Sealed secrets
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sealed-secrets
spec:
  destination:
    name: ''
    namespace: sealed-secrets
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/sealed-secrets
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Secrets
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: secrets
spec:
  destination:
    name: ''
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/environments/bangladesh-staging/secrets
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Postgres operator
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pgo
spec:
  destination:
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/pgo
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true

---

# Postgres cluster
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pgo-postgres
spec:
  destination:
    name: ''
    namespace: simple-v1
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/environments/bangladesh-staging/op-postgres
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: false
      selfHeal: true

---

# Cache redis
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cache-redis
spec:
  destination:
    name: ''
    namespace: simple-v1
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/redis
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.affinity-cache.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Worker redis
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: worker-redis
spec:
  destination:
    name: ''
    namespace: simple-v1
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/redis
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.affinity-worker.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Simple server, worker and cron
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: simple-server
spec:
  destination:
    name: ''
    namespace: simple-v1
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/simple-server
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.affinity.yaml
        - ../../environments/bangladesh-staging/values/simple.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

# Metabase
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metabase
spec:
  destination:
    name: ''
    namespace: simple-v1
    server: 'https://kubernetes.default.svc'
  source:
    path: k8s/manifests/metabase
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
    helm:
      valueFiles:
        - values.affinity.yaml
        - ../../environments/bangladesh-staging/values/metabase.yaml
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus
spec:
  destination:
    namespace: monitoring
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    directory:
      jsonnet:
        extVars:
        - name: ENVIRONMENT
          value: bangladesh-staging
        libs:
          - k8s/manifests/kube-prometheus/vendor
      exclude: '*.json'
    path: k8s/manifests/kube-prometheus
    repoURL: 'https://github.com/simpledotorg/container-deployment.git'
    targetRevision: master
  syncPolicy:
    automated: {}

---
