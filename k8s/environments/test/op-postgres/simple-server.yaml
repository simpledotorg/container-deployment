apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: simple
spec:
  image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-14.5-1
  postgresVersion: 14
  users:
    - name: admin
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    - name: simple
      databases:
        - simple
      password:
        type: AlphaNumeric
    - name: metabase
      databases:
        - metabase
      password:
        type: AlphaNumeric
    - name: test
      databases:
        - test
      password:
        type: AlphaNumeric
  instances:
    - name: instance1
      replicas: 2
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: 5Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: simple
                  postgres-operator.crunchydata.com/instance-set: instance1
      metadata:
        labels:
          tags.datadoghq.com/service: "postgrescluster-simple"
          tags.datadoghq.com/version: "14"
        annotations:
          ad.datadoghq.com/database.check_names: '["openmetrics"]'
          ad.datadoghq.com/database.init_configs: '[{}]'
          ad.datadoghq.com/database.instances: '[{"prometheus_url":"http://%%host%%:9187/metrics", "namespace": "crunchy_data", "metrics": ["ccp_pg_stat_statements_total_mean_exec_time_ms","ccp_connection_stats_active", "ccp_nodemx_data_disk_available_bytes", "ccp_pg_stat_statements_total_calls_count", "ccp_database_size_bytes", "ccp_replication_lag_size_bytes", "ccp_postmaster_uptime_seconds", "ccp_backrest_last_full_backup_time_since_completion_seconds", "ccp_backrest_last_diff_backup_time_since_completion_seconds"]}]'
          argocd.argoproj.io/sync-options: Delete=false
  backups:
    pgbackrest:
      global:
        # Number of full backups to retain
        repo1-retention-full: "2"
      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.40-1
      repos:
      - name: repo1
        schedules:
          full: "0 20 * * 0" 
          differential: "0 20 * * 1-6"
        volume:
          volumeClaimSpec:
            accessModes:
            - "ReadWriteOnce"
            resources:
              requests:
                storage: 10Gi
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        parameters:
          synchronous_commit: "on"
  monitoring:
    pgmonitor:
      exporter:
        image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.2.0-0
