kube-prometheus-stack:
  grafana:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      hosts:
        - grafana-kps-sandbox.simple.org
      tls:
        - secretName: grafana-kps-sandbox.simple.org-tls
          hosts:
            - grafana-kps-sandbox.simple.org
    admin:
      existingSecret: "grafana-secrets"
    persistence:
      enabled: true
  alertmanager:
    ingress:
      className: nginx
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
        nginx.ingress.kubernetes.io/auth-secret: kps-basic-auth
      hosts:
        - alertmanager-kps-sandbox.simple.org
      tls:
        - secretName: alertmanager-kps-sandbox.simple.org-tls
          hosts:
            - alertmanager-kps-sandbox.simple.org
  prometheus:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
        nginx.ingress.kubernetes.io/auth-secret: kps-basic-auth
      hosts:
        - prometheus-kps-sandbox.simple.org
      tls:
        - secretName: prometheus-kps-sandbox.simple.org-tls
          hosts:
            - prometheus-kps-sandbox.simple.org
    prometheusSpec:
      retention: 10d
      retentionSize: "90GB"
      logLevel: debug
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 100Gi
